package com.jianyue.main.controller;

import java.io.File;
import java.io.FileOutputStream;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.Bitmap;
import android.hardware.Camera;
import android.media.AudioManager;
import android.os.Bundle;
import android.os.Environment;
import android.preference.PreferenceManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.Toast;

import com.jianyue.utils.GlobalData;

public class TakePictureActivity extends Activity
{
	public final static String KEY_HINT = "key_hint";

	public final static String KEY_ANSWER = "key_answer";

	private CameraPreview mPreview;
	private FLASH_MODE flash_mode = FLASH_MODE.AUTO;
	private ImageView ivCamaraBtn ,ivClose;

	public static Activity activity;

	@Override
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setVolumeControlStream(AudioManager.STREAM_MUSIC);
		setContentView(R.layout.take_screenshot);
		activity = this;
		initObjects();
	}

	private void initObjects()
	{
		ivClose = (ImageView)findViewById(R.id.ivClose);
		ivClose.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View arg0) {
				backManage();
			}
		});
		ivCamaraBtn = (ImageView) findViewById(R.id.ivCamaraBtn);
		ivCamaraBtn.setOnTouchListener(new OnTouchListener() {
			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				switch (event.getAction()) {

			    case MotionEvent.ACTION_DOWN:
			    	if (mPreview == null)
					{
						mPreview = new CameraPreview(TakePictureActivity.this, flash_mode);
						FrameLayout preview = (FrameLayout) findViewById(R.id.flCameraPreview);
						preview.removeAllViews();
						preview.addView(mPreview);
						if (!mPreview.isCameraLoad())
						{
							Toast.makeText(TakePictureActivity.this, "Can't load camera!", Toast.LENGTH_SHORT).show();
							backManage();
						}
					}
			    	break;
			    case MotionEvent.ACTION_MOVE:
			    	break;
			    case MotionEvent.ACTION_UP:
			    		takePicture();
			    	break;
			    }
				return true;
			}
		});
	}

	@Override
	protected void onResume()
	{
		super.onResume();
	}

	@Override
	protected void onPause()
	{
		super.onPause();
		if (mPreview != null)
		{
			mPreview.onPause();
			mPreview = null;
		}
		ivCamaraBtn.setEnabled(false);
	}

	private void takePicture()
	{
		Log.i("log_tag", "takePicture");
		mPreview.takePicture(null, null, photoCallback);
	}

	private Camera.PictureCallback photoCallback = new Camera.PictureCallback()
	{

		public void onPictureTaken(final byte[] data, final Camera camera)
		{
			DisplayMetrics dm = new DisplayMetrics();
			getWindowManager().getDefaultDisplay().getMetrics(dm);
			GlobalData.bmp = null;
			GlobalData.bmp = (mPreview.getBitmapFromBuffer(data, dm.widthPixels, dm.heightPixels));
			GlobalData.sd_path = getFilePathFromSDCARD(GlobalData.bmp);
			Toast.makeText(TakePictureActivity.this, GlobalData.sd_path, Toast.LENGTH_LONG).show();
			if(GlobalData.bmp != null)
			{
				MainActivity.is_Add = true;
			}
			backManage();
		}
	};

	private void backManage()
	{
		finish();
		overridePendingTransition(R.anim.slide_down , R.anim.slide_down_out);
	}

	@Override
	public void onBackPressed()
	{
		backManage();
	}
	
	public String getFilePathFromSDCARD(Bitmap image) {
		File folder = null;
		if (Environment.getExternalStorageState().equals(
				Environment.MEDIA_MOUNTED)) {
			folder = new File(
					Environment.getExternalStorageDirectory(), "/Demo/");
			if (!folder.isDirectory()) {
				folder.mkdir();
			}
		} else {
			folder = getDir("Demo", Context.MODE_WORLD_READABLE);
		}
		SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(TakePictureActivity.this);
		int image_no = pref.getInt("Image_No", 1);
		String fname = "Demo_" + image_no + ".png";
		File myDir = new File(folder.toString());
		image_no++;
		Editor edit = pref.edit();
		edit.putInt("Image_No", image_no);
		edit.commit();
		File file = new File(myDir, fname);
		if (file.exists())
			file.delete();
		try {
			FileOutputStream out = new FileOutputStream(file);
			image.compress(Bitmap.CompressFormat.PNG, 90, out);
			out.flush();
			out.close();

		} catch (Exception e) {
			e.printStackTrace();
		}

		/*String fileName = "temp.jpg";
		File f = new File(Environment.getExternalStorageDirectory(),
				"/saved_images");
		f = new File(f, fileName);*/

		return file.getAbsolutePath();
	}
}
