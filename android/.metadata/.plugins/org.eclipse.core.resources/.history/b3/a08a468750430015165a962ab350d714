package com.jianyue.main.controller;

import java.io.File;

import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.entity.mime.content.FileBody;
import org.apache.http.entity.mime.content.StringBody;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.TextView;

import com.jianyue.DataTask.ApplyEventDataTask;
import com.jianyue.DataTask.SendMessageDataTask;
import com.jianyue.utils.ClassAPIResponse;
import com.jianyue.utils.GlobalData;
import com.jianyue.utils.Internet_Check;
import com.jianyue.utils.SessionManager;
import com.jianyue.utils.StaticMethodsUtility;
import com.jianyue.webservices.WebElements;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.assist.ImageLoadingListener;

public class ApplyEventActivity extends Activity {

	protected ImageLoader imageLoader;
	private DisplayImageOptions options;
	private String eventId;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_apply_event);
		options = new DisplayImageOptions.Builder()
		.showStubImage(R.color.main_bg_color)
		.showImageForEmptyUri(R.color.main_bg_color).cacheInMemory()
		.cacheOnDisc().build();
		imageLoader = ImageLoader.getInstance();
		Intent intent = getIntent();
        String eventId = intent.getStringExtra("id");
        TextView tvEventTitle = (TextView)findViewById(R.id.event_title);
		tvEventTitle.setText(intent.getStringExtra("title"));
		ImageView imageView = (ImageView) findViewById(R.id.event_pic);
		String pic = intent.getStringExtra("pic");
		if(!(pic == null || "".equals(pic))){
			System.out.println("event pic:"+pic);
			imageLoader.displayImage(pic, imageView,
					options, new ImageLoadingListener() {
						@Override
						public void onLoadingStarted(
								String imageUri, View view) {
						//	pb.setVisibility(View.VISIBLE);
						}

						@Override
						public void onLoadingFailed(
								String imageUri, View view,
								FailReason failReason) {
						//	pb.setVisibility(View.GONE);
						}

						@Override
						public void onLoadingComplete(
								String imageUri, View view,
								Bitmap loadedImage) {
						//	pb.setVisibility(View.GONE);
						}

						@Override
						public void onLoadingCancelled(
								String imageUri, View view) {
						//	pb.setVisibility(View.GONE);
						}
					});	
				
			
		}
		TextView tvEventDescription = (TextView)findViewById(R.id.event_description);
		tvEventDescription.setText(intent.getStringExtra("description"));
		ImageView backImageView = (ImageView) findViewById(R.id.event_back);
		backImageView.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				finish();
			}
		});
		TextView tvApplyEvent = (TextView)findViewById(R.id.apply_event_button);
		tvApplyEvent.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				TelephonyManager phoneMgr=(TelephonyManager)ApplyEventActivity.this.getSystemService(Context.TELEPHONY_SERVICE);
				if(phoneMgr != null){
					System.out.println(phoneMgr.getLine1Number());
				}
				finish();
			}
		});
        System.out.println("eventId:"+eventId);
	}

	private void applyEventWebservice() {
		final ClassAPIResponse apiResponse = new ClassAPIResponse();
		String append_url = "";
		ApplyEventDataTask task = new ApplyEventDataTask(ApplyEventActivity.this,
				apiResponse , append_url,eventId,mobile ) {
			@Override
			protected void onPostExecute(String result) {
				super.onPostExecute(result);

				if (result.equals(GlobalData.FAIL)) {
					if (!Internet_Check
							.checkInternetConnection(ApplyEventActivity.this)) {
						StaticMethodsUtility.showNegativeToast(
								SendMessageActivity.this,
								getResources().getString(R.string.no_internet));
					}
					return;
				}
				
				if(apiResponse.ack.equalsIgnoreCase("Success"))
				{
//					finish();
//					Intent i = new Intent(SendMessageActivity.this , MainActivity.class);
//					startActivity(i);
				}
				
			}
		};

		if (Internet_Check.checkInternetConnection(SendMessageActivity.this)) {
			try {

				MultipartEntity reqEntity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);
				try {
					
					reqEntity.addPart(WebElements.SENDMESSAGE.UUID,
							new StringBody(SessionManager.getUUID(SendMessageActivity.this)));
					if(reply_mode)
					{
						reqEntity.addPart(WebElements.SENDMESSAGE.MESSAGEID,
								new StringBody(receiver));
					}
					else
					{
						reqEntity.addPart(WebElements.SENDMESSAGE.RECEIVER,
								new StringBody(receiver));
					}
					reqEntity.addPart(WebElements.SENDMESSAGE.CONTENT,
							new StringBody(etMessage.getText().toString().trim()));
					reqEntity.addPart(WebElements.SENDMESSAGE.TIMESTAMP,
							new StringBody(String.valueOf(System.currentTimeMillis())));
					reqEntity.addPart(WebElements.SENDMESSAGE.HEIGHT,
							new StringBody(height));
					reqEntity.addPart(WebElements.SENDMESSAGE.WIDTH,
							new StringBody(width));
					reqEntity.addPart(WebElements.SENDMESSAGE.PIC ,
							new FileBody((new File(GlobalData.sd_path))));
					task.execute(reqEntity);
					backManage();
				} catch (Exception e) {

				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		} else {
			StaticMethodsUtility.showNegativeToast(SendMessageActivity.this,
					getResources().getString(R.string.no_internet));
		}
	}

}
